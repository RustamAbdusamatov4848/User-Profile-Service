openapi: 3.0.1
info:
  title: User Profile API
  description: User Profile API
  version: "1.0"
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /v1/users:
    put:
      tags:
        - user-controller
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
        required: true
      responses:
        "204":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "400":
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "400":
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"
  /v1/users/{id}/contacts:
    get:
      tags:
        - user-controller
      operationId: getUserContactByUserId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserContactDto"
        "404":
          description: Entity search error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

    put:
      tags:
        - user-controller
      operationId: updateUserContactByUserId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserContactDto"
        required: true
      responses:
        "204":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserContactDto"
        "400":
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"
  /v1/users/{id}:
    get:
      tags:
        - user-controller
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "404":
          description: Entity search error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

    delete:
      tags:
        - user-controller
      operationId: deleteUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK
  /v1/users/contacts/{id}:
    get:
      tags:
        - user-controller
      operationId: getUserContactByContactId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserContactDto"
        "404":
          description: Entity search error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          type: string
        userContactId:
          type: integer
          format: int64
    UserContactDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        telegramId:
          pattern: "^@[a-zA-Z0-9_]{4,}$"
          type: string
        mobilePhone:
          pattern: "^\\+[1-9]\\d{1,14}$"
          type: string
    ValidationErrorResponse:
      type: object
      properties:
        status:
          type: integer
          example: 400
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "email"
              message:
                type: string
                example: "must be a valid email address"
      required:
        - status
        - message
        - errors
